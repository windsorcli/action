name: CI

on:
  push:
    branches:
      - main
      - cd-action
  pull_request:
    branches:
      - main
  repository_dispatch:
    types: 
      - main-branch-update

jobs:
  windsorcli:
    runs-on: ubuntu-latest
    # runs-on: windows-latest
  
    steps:
      - name: Checkout code
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      # Install Windsor CLI Action
      - name: Install Windsor CLI Action
        uses: ./.github/actions/windsorcli
        with:
          version: v0.5.0
          install_folder: ${{ github.workspace }}/bin
          context: local
        
      - name: Windsor Context Get
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
        run: |
          ${{ github.workspace }}/bin/windsor context get
        shell: bash

      - name: Windsor Context Get (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          ${{ github.workspace }}/bin/windsor.exe context get
        shell: powershell

      - name: Check environment variables (Linux/macOS)
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
        run: |
          echo KUBECONFIG="$KUBECONFIG"
          echo KUBE_CONFIG_PATH="$KUBE_CONFIG_PATH"
          echo DOCKER_CONFIG="$DOCKER_CONFIG"
          echo DOCKER_HOST="$DOCKER_HOST"
          echo OMNICONFIG="$OMNICONFIG"
          echo TALOSCONFIG="$TALOSCONFIG"
          echo WINDSOR_CONTEXT="$WINDSOR_CONTEXT"
          echo WINDSOR_PROJECT_ROOT="$WINDSOR_PROJECT_ROOT"
        shell: bash

      - name: Check environment variables (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          # Print the $windsorEnvOutput variables
          Write-Output "windsorEnvOutput variables:"
          $windsorEnvOutput -split "`n" | ForEach-Object {
            Write-Output $_
          }
        shell: powershell

      - name: Create terraform test folder (Linux/macOS)
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
        run: |
          mkdir -p ${{ github.workspace }}/terraform/cluster
          touch ${{ github.workspace }}/terraform/cluster/main.tf
        shell: bash

      - name: Create terraform test folder (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          New-Item -ItemType Directory -Path ${{ github.workspace }}\terraform\cluster -Force
          New-Item -ItemType File -Path ${{ github.workspace }}\terraform\cluster\main.tf -Force
        shell: powershell
      
      # CD Windsor CLI - local context
      - name: CD to terraform test folder
        uses: ./.github/actions/windsorcli
        with:
          work_dir: ${{ github.workspace }}/terraform/cluster
          version: v0.5.0
          install_folder: ${{ github.workspace }}/bin
          context: local

      - name: Check TF_ environment variables (Linux/macOS)
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
        run: |
          windsor env
          # Print all environment variables that start with TF_
          env | grep '^TF_' | while IFS= read -r line; do
            echo "$line"
          done
        shell: bash

      - name: Check TF_ environment variables (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          # Print the $windsorEnvOutput variables
          Write-Output "windsorEnvOutput variables:"
          $windsorEnvOutput -split "`n" | ForEach-Object {
            Write-Output $_
          }
          # Print all environment variables that start with TF_
          Get-ChildItem Env: | Where-Object { $_.Name -like 'TF_*' } | ForEach-Object {
            Write-Output "$($_.Name)=$($_.Value)"
          }
        shell: powershell          

      # Install Windsor CLI Action
      - name: CD to terraform test folder
        uses: ./.github/actions/windsorcli
        with:
          work_dir: ${{ github.workspace }}
          version: v0.5.0
          install_folder: ${{ github.workspace }}/bin
          context: local

      - name: Check TF_ environment variables (Linux/macOS)
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
        run: |
          windsor env
          # Print all environment variables that start with TF_
          env | grep '^TF_' | while IFS= read -r line; do
            echo "$line"
          done
        shell: bash

      - name: Check TF_ environment variables (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          # Print the $windsorEnvOutput variables
          Write-Output "windsorEnvOutput variables:"
          $windsorEnvOutput -split "`n" | ForEach-Object {
            Write-Output $_
          }
          # Print all environment variables that start with TF_
          Get-ChildItem Env: | Where-Object { $_.Name -like 'TF_*' } | ForEach-Object {
            Write-Output "$($_.Name)=$($_.Value)"
          }
        shell: powershell          
          
##
## STAGING TESTING
##
      # CD Windsor CLI - staging context
      - name: CD to terraform test folder
        uses: ./.github/actions/windsorcli
        with:
          work_dir: ${{ github.workspace }}/terraform/cluster
          version: v0.5.0
          install_folder: ${{ github.workspace }}/bin
          context: staging

      - name: Check TF_ environment variables (Linux/macOS)
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
        run: |
          windsor env
          # Print all environment variables that start with TF_
          env | grep '^TF_' | while IFS= read -r line; do
            echo "$line"
          done
        shell: bash

      - name: Check TF_ environment variables (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          # Print the $windsorEnvOutput variables
          Write-Output "windsorEnvOutput variables:"
          $windsorEnvOutput -split "`n" | ForEach-Object {
            Write-Output $_
          }
          # Print all environment variables that start with TF_
          Get-ChildItem Env: | Where-Object { $_.Name -like 'TF_*' } | ForEach-Object {
            Write-Output "$($_.Name)=$($_.Value)"
          }
        shell: powershell          

      # Install Windsor CLI Action
      - name: CD to terraform test folder
        uses: ./.github/actions/windsorcli
        with:
          work_dir: ${{ github.workspace }}
          version: v0.5.0
          install_folder: ${{ github.workspace }}/bin
          context: staging

      - name: Check TF_ environment variables (Linux/macOS)
        if: ${{ runner.os == 'Linux' || runner.os == 'macOS' }}
        run: |
          windsor env
          # Print all environment variables that start with TF_
          env | grep '^TF_' | while IFS= read -r line; do
            echo "$line"
          done
        shell: bash

      - name: Check TF_ environment variables (Windows)
        if: ${{ runner.os == 'Windows' }}
        run: |
          # Print the $windsorEnvOutput variables
          Write-Output "windsorEnvOutput variables:"
          $windsorEnvOutput -split "`n" | ForEach-Object {
            Write-Output $_
          }
          # Print all environment variables that start with TF_
          Get-ChildItem Env: | Where-Object { $_.Name -like 'TF_*' } | ForEach-Object {
            Write-Output "$($_.Name)=$($_.Value)"
          }
        shell: powershell          
                  